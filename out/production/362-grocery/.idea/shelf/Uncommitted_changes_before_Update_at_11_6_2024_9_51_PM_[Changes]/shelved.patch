Index: Item.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.Serializable;\r\nimport java.util.ArrayList;\r\n\r\npublic class Item implements Serializable {\r\n    private boolean foodStamp;\r\n    private boolean taxable;\r\n    private String name;\r\n    private double price;\r\n    private int quantity;\r\n    private ArrayList<String> date;\r\n\r\n    public Item(String name, double price, boolean taxable, boolean foodStamp) {\r\n        this.name = name;\r\n        this.price = price;\r\n        this.taxable = taxable;\r\n        this.foodStamp = foodStamp;\r\n        this.quantity = 0;\r\n    }\r\n\r\n    public Item(String name, double price, boolean taxable, boolean foodStamp, int quantity, ArrayList<String> date) {\r\n        this.name = name;\r\n        this.price = price;\r\n        this.taxable = taxable;\r\n        this.foodStamp = foodStamp;\r\n        this.quantity = quantity;\r\n        this.date = new ArrayList<String>(date);\r\n    }\r\n\r\n    public void addQuantity(String date)\r\n    {\r\n        this.date.add(date);\r\n        quantity += 1;\r\n    }\r\n\r\n    public void addQuantity(String date, int quantity)\r\n    {\r\n        this.quantity += quantity;\r\n        for(int i = 0; i < quantity; i++)\r\n        {\r\n            this.date.add(date);\r\n        }\r\n    }\r\n\r\n    public void removeQuantity(int toRemove)\r\n    {\r\n        for(int i = 0; i < toRemove; i++)\r\n        {\r\n            if(quantity > 0)\r\n            {\r\n                date.removeFirst();\r\n                quantity = quantity - 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public double getPrice() {\r\n        return price;\r\n    }\r\n\r\n    public int getQuantity() {\r\n        return quantity;\r\n    }\r\n\r\n    public ArrayList<String> getDate()\r\n    {\r\n        return date;\r\n    }\r\n\r\n\r\n    @Override\r\n    public String toString() {\r\n        return name + \",\" + String.format(\"%.2f\", price) + \",\" + quantity + \",\" + taxable + \",\" + foodStamp + \",\" + String.join(\",\", date);\r\n    }\r\n\r\n    public static Item fromString(String line) {\r\n        String[] parts = line.split(\",\");\r\n        String name = parts[0];\r\n        double price = Double.parseDouble(parts[1]);\r\n        int quantity = Integer.parseInt(parts[2]);\r\n        boolean taxable = Boolean.parseBoolean(parts[3]);\r\n        boolean foodStamp = Boolean.parseBoolean(parts[4]);\r\n        ArrayList<String> date = new ArrayList<String>();\r\n        for(int i = 5; i < 5 + quantity; i++)\r\n        {\r\n            date.add(parts[i]);\r\n        }\r\n        return new Item(name, price, taxable, foodStamp, quantity, date);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Item.java b/Item.java
--- a/Item.java	(revision d659fe992deab9ac8de77bffe6c861c00e235d0b)
+++ b/Item.java	(date 1730950577916)
@@ -28,16 +28,39 @@
 
     public void addQuantity(String date)
     {
-        this.date.add(date);
+        for(int j = 0; j <= this.date.size(); j++) {
+            if(j == this.date.size())
+            {
+                this.date.add(date);
+                break;
+            }
+            else if (date.compareTo(this.date.get(j)) < 0) {
+                this.date.add(j, date);
+                break;
+            }
+        }
         quantity += 1;
     }
 
     public void addQuantity(String date, int quantity)
     {
         this.quantity += quantity;
-        for(int i = 0; i < quantity; i++)
+        for(int j = 0; j <= this.date.size(); j++)
         {
-            this.date.add(date);
+            if(j == this.date.size())
+            {
+                for(int i = 0; i < quantity; i++) {
+                    this.date.add(date);
+                }
+                break;
+            }
+            else if (date.compareTo(this.date.get(j)) < 0)
+            {
+                for(int i = 0; i < quantity; i++) {
+                    this.date.add(j, date);
+                }
+                break;
+            }
         }
     }
 
Index: Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        GroceryStore store = new GroceryStore();\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        while (true) {\r\n            System.out.println(\"1. Add Item\");\r\n            System.out.println(\"2. View Inventory\");\r\n            System.out.println(\"3. Checkout\");\r\n            System.out.println(\"4. Exit\");\r\n            System.out.print(\"Choose an option: \");\r\n            int choice = scanner.nextInt();\r\n            scanner.nextLine(); // Consume newline left-over\r\n\r\n            switch (choice) {\r\n                case 1:\r\n                    System.out.print(\"Enter item name: \");\r\n                    String name = scanner.nextLine();\r\n                    System.out.print(\"Enter item price: \");\r\n                    double price = scanner.nextDouble();\r\n                    System.out.print(\"Enter item quantity: \");\r\n                    int quantity = scanner.nextInt();\r\n                    scanner.nextLine(); // Consume newline\r\n\r\n                    Item item = new Item(name, price, quantity);\r\n                    store.addItem(item);\r\n                    System.out.println(\"Item added successfully!\\n\");\r\n                    break;\r\n\r\n                case 2:\r\n                    System.out.println(\"Inventory:\");\r\n                    for (Item i : store.getInventory()) {\r\n                        System.out.printf(\"%s - $%.2f - Quantity: %d%n\", i.getName(), i.getPrice(), i.getQuantity());\r\n                    }\r\n                    System.out.println();\r\n                    break;\r\n\r\n                case 3:\r\n                    System.out.print(\"Enter item name to buy: \");\r\n                    String itemName = scanner.nextLine();\r\n                    System.out.print(\"Enter quantity to buy: \");\r\n                    int requestedQuantity = scanner.nextInt();\r\n                    scanner.nextLine(); // Consume newline\r\n\r\n                    double totalCost = store.checkout(itemName, requestedQuantity);\r\n                    if (totalCost > 0) {\r\n                        System.out.printf(\"Total cost for %s: $%.2f%n\", itemName, totalCost);\r\n                    }\r\n                    break;\r\n\r\n                case 4:\r\n                    System.out.println(\"Exiting...\");\r\n                    scanner.close();\r\n                    return;\r\n\r\n                default:\r\n                    System.out.println(\"Invalid choice, please try again.\");\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Main.java b/Main.java
--- a/Main.java	(revision d659fe992deab9ac8de77bffe6c861c00e235d0b)
+++ b/Main.java	(date 1730951331216)
@@ -16,15 +16,56 @@
 
             switch (choice) {
                 case 1:
+                    boolean correctName = false;
                     System.out.print("Enter item name: ");
                     String name = scanner.nextLine();
+                    while(!correctName) {
+                        System.out.println("Is this the correct name of the product you wish to add: " + name);
+                        System.out.println("Please answer y or n: ");
+                        String answer = scanner.next();
+                        if(answer.equals("y"))
+                        {
+                            correctName = true;
+                        }
+                        else {
+                            System.out.print("Enter item name: ");
+                            name = scanner.nextLine();
+                        }
+                    }
+                    for (Item i : store.getInventory()) {
+                        if(i.getName().compareTo(name.toLowerCase()) == 0)
+                        {
+                            System.out.println("Item exists in Inventory");
+                            System.out.print("Enter item quantity to add: ");
+                            int quantity = scanner.nextInt();
+                            while(quantity < 1)
+                            {
+                                System.out.println("Invalid quantity to add, please pick add a positive amount of inventory");
+                                System.out.print("Enter item quantity to add: ");
+                                quantity = scanner.nextInt();
+                            }
+                            System.out.print("Enter expiration date of the item in form 'YY-mm-dd': ");
+                            String date = scanner.next();
+                            if(quantity == 1)
+                            {
+                                i.addQuantity(date);
+                            }
+                            else if(quantity > 1)
+                            {
+                                i.addQuantity(date, quantity);
+                            }
+                            break;
+                        }
+                    }
                     System.out.print("Enter item price: ");
                     double price = scanner.nextDouble();
-                    System.out.print("Enter item quantity: ");
-                    int quantity = scanner.nextInt();
+                    System.out.print("Enter if item is applicable for Food Stamps: ");
+                    boolean foodStamp = scanner.nextBoolean();
+                    System.out.print("Enter if item is Taxable: ");
+                    boolean taxable = scanner.nextBoolean();
                     scanner.nextLine(); // Consume newline
 
-                    Item item = new Item(name, price, quantity);
+                    Item item = new Item(name.toLowerCase(), price, taxable, foodStamp);
                     store.addItem(item);
                     System.out.println("Item added successfully!\n");
                     break;
